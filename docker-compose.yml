services:
  ########################################################
  # 1. FastAPI backend
  ########################################################
  legal-simplifier:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # ── Runtime mode ─────────────────────────────────
      - ENVIRONMENT=development
      - DEBUG=true
      
      # ── Auth & CORS ──────────────────────────────────
      - API_KEY=my-strong-secret
      - CORS_ORIGINS=http://localhost:3000,https://localhost:3000
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOW_HEADERS=*
      
      # ── GCP / Document AI ────────────────────────────
      - GCP_PROJECT_ID=my-gcp-project
      - GCP_LOCATION=us-central1
      - DOCAI_PROCESSOR_ID=6b8123abc987
      - DOCAI_PROCESSOR_VERSION=rc
      
      # ── Vertex AI ────────────────────────────────────
      - VERTEX_MODEL=gemini-1.5-pro
      - VERTEX_LOCATION=us-central1
      - VERTEX_MAX_TOKENS=8192
      - VERTEX_TEMPERATURE=0.1
      - GOOGLE_API_KEY=your-vertex-ai-api-key-here
      # ── Milvus connection ───────────────────────────
      - MILVUS_HOST=host.docker.internal
      - MILVUS_PORT=19530
      - MILVUS_COLLECTION=data2
      - MILVUS_TIMEOUT=30
      
      # ── HuggingFace Configuration ───────────────────
      - HF_MODEL_NAME=nlpaueb/legal-bert-base-uncased
      - HF_CACHE_DIR=/tmp/hf_cache
      
      # ── File Upload Configuration ───────────────────
      - MAX_FILE_SIZE=20971520
      - MAX_PAGES=15
      - ALLOWED_MIME_TYPES=application/pdf,image/png,image/jpeg,application/vnd.openxmlformats-officedocument.wordprocessingml.document
      
      # ── Security ─────────────────────────────────────
      - SECRET_MANAGER_PROJECT=
      - USE_SECRET_MANAGER=false
      
      # ── Performance ──────────────────────────────────
      - WORKER_TIMEOUT=300
      - KEEP_ALIVE_TIMEOUT=5
      - MAX_WORKERS=4
      
      # ── Database & Redis (for future use) ───────────
      - DATABASE_URL=postgresql://postgres:password@db:5432/legal_db
      - REDIS_URL=redis://redis:6379
      
    command: >
      uvicorn --app-dir /app/src/legal-document-simplifier
              src.backend.main:app 
              --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./src:/app/src
      - ./config/credentials:/app/credentials:ro
      - uploads_volume:/app/uploads
    depends_on:
      - db
      - redis
      - milvus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - legal_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ########################################################
  # 2. Postgres
  ########################################################
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: legal_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - legal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d legal_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  ########################################################
  # 3. Redis
  ########################################################
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - legal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes

  ########################################################
  # 4. Etcd (for Milvus)
  ########################################################
  etcd:
    image: quay.io/coreos/etcd:v3.5.13
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: "1000"
      ETCD_QUOTA_BACKEND_BYTES: "4294967296"
      ETCD_SNAPSHOT_COUNT: "50000"
    command: >
      etcd -advertise-client-urls=http://etcd:2379
           -listen-client-urls=http://0.0.0.0:2379
           --data-dir /etcd
    volumes:
      - etcd_data:/etcd
    networks:
      - legal_network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  ########################################################
  # 5. MinIO (object storage for Milvus)
  ########################################################
  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-01T01-11-10Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /minio_data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - legal_network

  ########################################################
  # 6. Milvus 2.5 (stand-alone)
  ########################################################
  milvus:
    image: milvusdb/milvus:v2.5.6
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - legal_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 90s

  ########################################################
  # 7. Attu (Milvus UI)
  ########################################################
  attu:
    image: zilliz/attu:v2.4.8
    depends_on:
      milvus:
        condition: service_healthy
    ports:
      - "8001:3000"
    environment:
      MILVUS_URL: milvus:19530
    networks:
      - legal_network

volumes:
  postgres_data:
  redis_data:
  uploads_volume:
  etcd_data:
  minio_data:
  milvus_data:

networks:
  legal_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
