version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/fastapi.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_KEY=${API_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - DOCAI_PROCESSOR_ID=${DOCAI_PROCESSOR_ID}
      - DOCAI_PROCESSOR_VERSION=rc
      - VERTEX_LOCATION=${VERTEX_LOCATION:-us}
      - MILVUS_HOST=milvus-standalone
      - MILVUS_PORT=19530
      - MILVUS_COLLECTION=data2
      - USE_SECRET_MANAGER=${USE_SECRET_MANAGER}
    volumes:
      - ../src:/app/src
      - ~/.config/gcloud:/root/.config/gcloud:ro  # For local GCP auth
    depends_on:
      - milvus-standalone
    networks:
      - legal-api-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.2
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    networks:
      - legal-api-net
    restart: unless-stopped

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - legal-api-net
    restart: unless-stopped

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - legal-api-net
    restart: unless-stopped

networks:
  legal-api-net:
    driver: bridge

volumes:
  milvus_data:
  etcd_data:
  minio_data:
